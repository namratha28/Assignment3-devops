{"ast":null,"code":"'use strict';\n\nvar toUpperFirst = require('./toUpperFirst');\n\nvar prefixes = [\"ms\", \"Moz\", \"Webkit\", \"O\"];\n\nvar el = require('./el');\n\nvar ELEMENT;\nvar PREFIX;\n\nmodule.exports = function (key) {\n  if (PREFIX !== undefined) {\n    return PREFIX;\n  }\n\n  ELEMENT = ELEMENT || el();\n  var i = 0;\n  var len = prefixes.length;\n  var tmp;\n  var prefix;\n\n  for (; i < len; i++) {\n    prefix = prefixes[i];\n    tmp = prefix + toUpperFirst(key);\n\n    if (typeof ELEMENT.style[tmp] != 'undefined') {\n      return PREFIX = prefix;\n    }\n  }\n\n  return PREFIX;\n};","map":{"version":3,"sources":["C:/NU/Csye7220/Lecture3/Reactapp-songs/songs/node_modules/react-style-normalizer/src/getPrefix.js"],"names":["toUpperFirst","require","prefixes","el","ELEMENT","PREFIX","module","exports","key","undefined","i","len","length","tmp","prefix","style"],"mappings":"AAAA;;AAEA,IAAIA,YAAY,GAAGC,OAAO,CAAC,gBAAD,CAA1B;;AACA,IAAIC,QAAQ,GAAO,CAAC,IAAD,EAAO,KAAP,EAAc,QAAd,EAAwB,GAAxB,CAAnB;;AAEA,IAAIC,EAAE,GAAGF,OAAO,CAAC,MAAD,CAAhB;;AAEA,IAAIG,OAAJ;AACA,IAAIC,MAAJ;;AAEAC,MAAM,CAACC,OAAP,GAAiB,UAASC,GAAT,EAAa;AAE7B,MAAIH,MAAM,KAAKI,SAAf,EAAyB;AACxB,WAAOJ,MAAP;AACA;;AAEDD,EAAAA,OAAO,GAAGA,OAAO,IAAID,EAAE,EAAvB;AAEA,MAAIO,CAAC,GAAG,CAAR;AACA,MAAIC,GAAG,GAAGT,QAAQ,CAACU,MAAnB;AACA,MAAIC,GAAJ;AACA,MAAIC,MAAJ;;AAEA,SAAOJ,CAAC,GAAGC,GAAX,EAAgBD,CAAC,EAAjB,EAAoB;AACnBI,IAAAA,MAAM,GAAGZ,QAAQ,CAACQ,CAAD,CAAjB;AACAG,IAAAA,GAAG,GAAGC,MAAM,GAAGd,YAAY,CAACQ,GAAD,CAA3B;;AAEA,QAAI,OAAOJ,OAAO,CAACW,KAAR,CAAcF,GAAd,CAAP,IAA6B,WAAjC,EAA6C;AAC5C,aAAOR,MAAM,GAAGS,MAAhB;AACA;AACD;;AAED,SAAOT,MAAP;AACA,CAvBD","sourcesContent":["'use strict';\n\nvar toUpperFirst = require('./toUpperFirst')\nvar prefixes     = [\"ms\", \"Moz\", \"Webkit\", \"O\"]\n\nvar el = require('./el')\n\nvar ELEMENT\nvar PREFIX\n\nmodule.exports = function(key){\n\n\tif (PREFIX !== undefined){\n\t\treturn PREFIX\n\t}\n\n\tELEMENT = ELEMENT || el()\n\n\tvar i = 0\n\tvar len = prefixes.length\n\tvar tmp\n\tvar prefix\n\n\tfor (; i < len; i++){\n\t\tprefix = prefixes[i]\n\t\ttmp = prefix + toUpperFirst(key)\n\n\t\tif (typeof ELEMENT.style[tmp] != 'undefined'){\n\t\t\treturn PREFIX = prefix\n\t\t}\n\t}\n\n\treturn PREFIX\n}"]},"metadata":{},"sourceType":"script"}